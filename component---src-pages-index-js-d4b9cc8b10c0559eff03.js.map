{"version":3,"sources":["webpack:///./src/constants/Fonts.js","webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/Styled.js","webpack:///./src/constants/Colors.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["Fonts","Handwritten","HandwrittenTitle","FancyText","styled","p","withConfig","displayName","componentId","props","align","FancyTitle","h1","ObnoxiousIntro","div","IndexPage","react_default","a","createElement","layout","seo","title","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","d","__webpack_exports__","loader","enqueue","React","createContext","m","module","exports","require","default","Link","Anchor","styled_components__WEBPACK_IMPORTED_MODULE_1__","_constants_Colors__WEBPACK_IMPORTED_MODULE_2__","gatsby__WEBPACK_IMPORTED_MODULE_3__","GatsbyLink","Colors","DarkGrey","Math","random","MediumGrey","Black","Accent","ProdPageRenderer","_ref","location","pageResources","InternalPageRenderer","Object","assign","json","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","data","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","NavBox","NavItem","pages","link","external","NavBar","map","page","key","Styled","href","to","Header","header","header_NavBar","Layout","children","_856328897","Fragment","style","margin","maxWidth","padding","paddingTop"],"mappings":"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","file":"component---src-pages-index-js-d4b9cc8b10c0559eff03.js","sourcesContent":["const Fonts = {\n  Handwritten: 'Bad Script,Shadows Into Light Two,serif',\n  HandwrittenTitle: 'Just Another Hand,sans-serif',\n}\n\nexport default Fonts","import React from \"react\"\nimport styled from \"styled-components\"\n\nimport Layout from \"../components/layout\"\n// import Image from \"../components/image\"\nimport SEO from \"../components/seo\"\nimport Fonts from \"../constants/Fonts\"\n\nconst FancyText = styled.p`\n  font-family: ${Fonts.Handwritten};\n  font-size: 1.3em;\n  text-align: ${props => (props.align || 'left')}\n`\n\nconst FancyTitle = styled.h1`\n  font-size: 4em;\n  font-family: ${Fonts.HandwrittenTitle};\n  text-align: ${props => (props.align || 'left')}\n`\n\nconst ObnoxiousIntro = styled.div`\n  padding: 3em 0;\n`\n\nconst IndexPage = () => (\n  <Layout>\n    <SEO title=\"Home | Zoravur Singh\" />\n    <ObnoxiousIntro>\n      <FancyText>Hi, I'm</FancyText>\n      <FancyTitle align='center'>Zoravur Singh</FancyTitle>\n      <FancyText align='right'>and this is my website.</FancyText>\n    </ObnoxiousIntro>\n  </Layout>\n)\n\nexport default IndexPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport styled from \"styled-components\"\n\nimport Colors from \"../constants/Colors\"\n\nimport { Link as GatsbyLink } from \"gatsby\"\nexport const Link = styled(GatsbyLink)`\n  text-decoration: none;\n  color: ${Colors.DarkGrey};\n\n  :hover {\n    color: ${() => `hsl(${360 * Math.random() | 0}, 100%, 50%)`};\n  }\n`\n\nexport const Anchor = styled.a`\n  text-decoration: none;\n  color: ${Colors.DarkGrey};\n\n  :hover {\n    color: ${() => `hsl(${360 * Math.random() | 0}, 100%, 50%)`};\n  }\n`","const Colors = {\n  MediumGrey: '#999999',\n  DarkGrey: '#444444',\n  Black: '#000000',\n  Accent: '#00a',\n}\n\nexport default Colors","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React from \"react\"\nimport styled from 'styled-components'\nimport { useStaticQuery, graphql } from 'gatsby'\n\nimport { Link, Anchor } from \"./Styled\"\n\nconst NavBox = styled.div`\n  width: 100%;\n  display: flex;\n  padding: 1em 0;\n`\n\nconst NavItem = styled.div`\n  width: 10ch;\n`\n\nconst pages = [\n  {\n    name: 'Home',\n    link: '/',\n  },\n  {\n    name: 'About',\n    link: '/about',\n  },\n  {\n    name: 'Projects',\n    link: '/projects',\n  },\n  {\n    name: 'Resume',\n    link: '/resume.pdf',\n    external: 'true',\n  }\n]\n\nconst NavBar = ({pages}) => {\n  return (\n    <NavBox>\n      {pages.map(page => {\n        return (\n          <NavItem key={page.name}>\n            {page.external ? \n              <Anchor href={page.link}>{page.name}</Anchor> :\n              <Link to={page.link}>{page.name}</Link>\n            }\n          </NavItem>\n        )\n      })}\n    </NavBox>\n  )\n}\n\nconst Header = styled.div`\n  margin-bottom: 1em;\n`\n\nexport default () => <Header><NavBar pages={pages}/></Header>;","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: 960,\n          padding: `0px 1.0875rem 1.45rem`,\n          paddingTop: 0,\n        }}\n      >\n        <Header />\n        <main>\n          {children}\n        </main>\n        <footer>\n        </footer>\n      </div>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}