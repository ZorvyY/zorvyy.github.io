{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/Styled.js","webpack:///./src/constants/Colors.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","NotFoundPage","a","createElement","title","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","d","loader","enqueue","React","createContext","m","module","exports","require","default","Link","Anchor","styled_components__WEBPACK_IMPORTED_MODULE_1__","_constants_Colors__WEBPACK_IMPORTED_MODULE_2__","gatsby__WEBPACK_IMPORTED_MODULE_3__","styled","GatsbyLink","withConfig","displayName","componentId","Colors","DarkGrey","Math","random","MediumGrey","Black","Accent","ProdPageRenderer","_ref","location","pageResources","InternalPageRenderer","Object","assign","json","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","data","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","NavBox","div","NavItem","pages","link","external","NavBar","react_default","map","page","key","Styled","href","to","Header","header","header_NavBar","Layout","children","_856328897","Fragment","style","margin","maxWidth","padding","paddingTop"],"mappings":"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","file":"component---src-pages-404-js-0e3b6f5d0a48406aab0e.js","sourcesContent":["import React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst NotFoundPage = () => (\n  <Layout>\n    <SEO title=\"Not found | Zoravur Singh\" />\n    <h1>404 - NOT FOUND</h1>\n    <p>This page doesn't exist. Sorry.</p>\n  </Layout>\n)\n\nexport default NotFoundPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport styled from \"styled-components\"\n\nimport Colors from \"../constants/Colors\"\n\nimport { Link as GatsbyLink } from \"gatsby\"\nexport const Link = styled(GatsbyLink)`\n  text-decoration: none;\n  color: ${Colors.DarkGrey};\n\n  :hover {\n    color: ${() => `hsl(${360 * Math.random() | 0}, 100%, 50%)`};\n  }\n`\n\nexport const Anchor = styled.a`\n  text-decoration: none;\n  color: ${Colors.DarkGrey};\n\n  :hover {\n    color: ${() => `hsl(${360 * Math.random() | 0}, 100%, 50%)`};\n  }\n`","const Colors = {\n  MediumGrey: '#999999',\n  DarkGrey: '#444444',\n  Black: '#000000',\n  Accent: '#00a',\n}\n\nexport default Colors","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React from \"react\"\nimport styled from 'styled-components'\nimport { useStaticQuery, graphql } from 'gatsby'\n\nimport { Link, Anchor } from \"./Styled\"\n\nconst NavBox = styled.div`\n  width: 100%;\n  display: flex;\n  padding: 1em 0;\n`\n\nconst NavItem = styled.div`\n  width: 10ch;\n`\n\nconst pages = [\n  {\n    name: 'Home',\n    link: '/',\n  },\n  {\n    name: 'About',\n    link: '/about',\n  },\n  {\n    name: 'Projects',\n    link: '/projects',\n  },\n  {\n    name: 'Resume',\n    link: '/resume.pdf',\n    external: 'true',\n  }\n]\n\nconst NavBar = ({pages}) => {\n  return (\n    <NavBox>\n      {pages.map(page => {\n        return (\n          <NavItem key={page.name}>\n            {page.external ? \n              <Anchor href={page.link}>{page.name}</Anchor> :\n              <Link to={page.link}>{page.name}</Link>\n            }\n          </NavItem>\n        )\n      })}\n    </NavBox>\n  )\n}\n\nconst Header = styled.div`\n  margin-bottom: 1em;\n`\n\nexport default () => <Header><NavBar pages={pages}/></Header>;","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: 960,\n          padding: `0px 1.0875rem 1.45rem`,\n          paddingTop: 0,\n        }}\n      >\n        <Header />\n        <main>\n          {children}\n        </main>\n        <footer>\n        </footer>\n      </div>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}