{"version":3,"sources":["webpack:///./src/constants/Fonts.js","webpack:///./src/pages/index.js","webpack:///./src/constants/Colors.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/Styled.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/Navigation.js","webpack:///./src/components/Social.js","webpack:///./src/components/Header.js","webpack:///./src/components/layout.js"],"names":["Fonts","Handwritten","HandwrittenTitle","Mono","Heading","FancyText","styled","p","withConfig","displayName","componentId","props","align","FancyTitle","h1","ObnoxiousIntro","react_default","a","createElement","_StyledDiv","_StyledDiv2","IndexPage","layout","seo","title","pages_ObnoxiousIntro","Colors","MediumGrey","DarkGrey","DarkerGrey","Black","Accent","loader","enqueue","React","createContext","UnstyledLink","to","startsWith","external","rest","_objectWithoutPropertiesLoose","Object","assign","href","gatsby_link_default","Link","IconLink","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","InternalPageRenderer","json","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","data","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","NavBox","div","NavItem","NavLink","active","NavBar","pages","es","_ref2","activePage","pathname","map","page","key","link","_StyledSpan","Navigation","Navigation_NavBar","IconTray","Social","socials","social","Styled","index_es","icon","faGithub","faLinkedin","faCodepen","components_Social","Social_Social","HeaderSection","HeaderContainer","Header","width","Layout","children","_856328897","console","log","Fragment","style","margin","maxWidth","padding","paddingTop","components_Header"],"mappings":"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","file":"component---src-pages-index-js-75298bcdc46542211965.js","sourcesContent":["const Fonts = {\n  Handwritten: 'Roboto Slab,serif',\n  HandwrittenTitle: '900 4em Montserrat,sans-serif',\n  Mono: 'Roboto Mono,mono',\n  Heading: 'Roboto'\n}\n\n// str.trim().split('\\n').map(s => s.slice(23,-11))\n\nexport default Fonts","import React from \"react\"\nimport styled from \"styled-components\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport Fonts from \"../constants/Fonts\"\n\nconst FancyText = styled.p`\n  font-size: 1.3em;\n  text-align: ${props => (props.align || 'left')}\n`\n\nconst FancyTitle = styled.h1`\n  font: ${Fonts.HandwrittenTitle};\n  text-align: ${props => (props.align || 'left')};\n  text-transform: uppercase;\n`\n\nconst ObnoxiousIntro = () => {\n  return (\n    <div css={`margin: 3em 0;`}>\n      <FancyText>Hi, I'm</FancyText>\n      <div css={`padding: 0 3em;`}>\n        <FancyTitle>\n          Zoravur <br/>\n          Singh\n        </FancyTitle>\n      </div>\n      <FancyText align='right'>and this is my website.</FancyText>\n    </div>\n  )\n}\n\nconst IndexPage = () => (\n  <Layout>\n    <SEO title=\"Home\" />\n    <ObnoxiousIntro />\n  </Layout>\n)\n\nexport default IndexPage\n","const Colors = {\n  MediumGrey: '#999999',\n  DarkGrey: '#444444',\n  DarkerGrey: '#111',\n  Black: '#000000',\n  Accent: '#e94d38',\n}\n\nexport default Colors","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from \"react\"\nimport styled from \"styled-components\"\n\nimport Colors from \"../constants/Colors\"\n\nimport { Link as GatsbyLink } from \"gatsby\"\n\nexport const UnstyledLink = props => {\n  if (props.to.startsWith('http') || props.external) {\n    const { to, external, ...rest } = props\n    return <a href={to} {...rest} /> \n  } else {\n    const { external, ...rest } = props\n    return <GatsbyLink {...rest} />\n  }\n} \n\nexport const Link = styled(UnstyledLink)`\n  text-decoration: none;\n  color: ${Colors.DarkGrey};\n  position: relative;\n\n  :hover {\n    :after { \n      width: 100%; \n      left: 0; \n    }\n  }\n\n  :after {    \n    background: none repeat scroll 0 0 transparent;\n    bottom: 0;\n    content: \"\";\n    display: block;\n    height: 2px;\n    left: 50%;\n    position: absolute;\n    background: ${Colors.Accent};\n    transition: width 0.3s ease 0s, left 0.3s ease 0s;\n    width: 0;\n  }\n`\n\nexport const IconLink = styled(UnstyledLink)`\n  text-decoration: none;\n  color: ${Colors.DarkGrey};\n  transition: color 200ms;\n\n  :hover {\n    color: ${Colors.Accent};\n  }\n`","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React from \"react\"\nimport styled from 'styled-components'\nimport { Location } from '@reach/router'\n\nimport { Link } from './Styled'\nimport Colors from '../constants/Colors'\n\nconst NavBox = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n`\n\nconst NavItem = styled.div`\n  text-transform: uppercase;\n`\n\nconst NavLink = styled(Link)`\n  font-family: Oswald; \n\n  ${props => props.active ? `\n    color: ${Colors.Accent}\n    :after {\n      background: ${Colors.DarkGrey}\n    }\n\n  ` : ''}\n`\n\nconst NavBar = ({ pages }) => {\n  return (\n    <NavBox>\n      <Location>\n        {({ location } ) => {\n          let activePage = location.pathname\n\n          return pages.map(page => {\n            return (\n              <NavItem key={page.name}>\n                  <NavLink to={page.link} active={activePage===page.link} external={page.external}>\n                    <span css={`font-family: Oswald;`}>{page.name}</span>\n                  </NavLink>\n              </NavItem>\n            )\n          })\n        }}\n      </Location>\n\n    </NavBox>\n  )\n}\n\nconst pages = [\n  {\n    name: 'Home',\n    link: '/',\n  },\n  {\n    name: 'About',\n    link: '/about/',\n  },\n  {\n    name: 'Projects',\n    link: '/projects/',\n  },\n  {\n    name: 'Resume',\n    link: '/resume.pdf',\n    external: 'true',\n  },\n]\n\nexport default () => <NavBar pages={pages} />","import React from 'react'\nimport styled from 'styled-components'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faGithub, faLinkedin, faCodepen } from '@fortawesome/free-brands-svg-icons'\n\nimport { IconLink } from './Styled'\n\nconst IconTray = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  width: 100%;\n`\n\nconst Social = ({ socials }) => {\n  return (\n    <IconTray>\n      {socials.map(social => {\n        return (\n          <div css='padding: 0 0.5ch;' key={social.link}>\n            <IconLink to={social.link}><FontAwesomeIcon icon={social.icon} /></IconLink>\n          </div>\n        )\n      })}\n    </IconTray>\n  )\n}\n\nconst socials = [\n  {\n    link: 'https://github.com/ZorvyY',\n    icon: faGithub,\n  },\n  {\n    link: 'https://linkedin.com/in/zoravur-singh',\n    icon: faLinkedin,\n  },\n  {\n    link: 'https://codepen.io/ZorvyY',\n    icon: faCodepen,\n  }\n]\n\nexport default () => <Social socials={socials} />","import React from \"react\"\nimport styled from 'styled-components'\n// import { useStaticQuery, graphql } from 'gatsby'\n\nimport Navigation from './Navigation'\nimport Social from './Social'\n// import logoSrc from \"../assets/icons/logo-lettering-bold.svg\"\n// import Fonts from \"../constants/Fonts\"\n\n\nconst HeaderSection = styled.div`\n  flex-grow: 1;\n  font-size: 1.2em;\n`\n\nconst HeaderContainer = styled.div`\n  margin-bottom: 1em;\n  display: flex;\n  justify-content: space-between;\n  padding: 1em 0;\n`\n\nconst Header = () => {\n  return (\n    <HeaderContainer>\n      <HeaderSection width='80%'>\n        <Navigation />\n      </HeaderSection>\n      <HeaderSection width='20%'>\n        <Social />\n      </HeaderSection>\n    </HeaderContainer>\n  )\n}\n\n\n\n\nexport default Header;","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./Header\"\nimport './layout.css'\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  console.log(data.site.siteMetadata.title)\n\n  return (\n    <>\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: 960,\n          padding: `0px 1.0875rem 1.45rem`,\n          paddingTop: 0,\n        }}\n      >\n        <Header />\n        <main>\n          {children}\n        </main>\n        <footer>\n        </footer>\n      </div>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}